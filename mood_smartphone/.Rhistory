plot(dat$Conc,dat$Length, ylab = "Length", xlab = "Concentration 'CaCl' ", main = "Scatterplot of Conc vs length \n of muscle data", xlim = c(0,4), ylim = c(0,37))
plot(dat$Conc,dat$Length, ylab = "Length", xlab = "Concentration 'CaCl' ", main = "Scatterplot of Conc vs length \n of muscle data", xlim = c(0,4), ylim = c(0,37))
formula <- as.formula(Length ~ theta1 + theta2*exp(-Conc/theta3))
nmodel <- nls(formula, dat, start = c(theta1 = 25.47, theta2=-25.47, theta3=1))
nmodel
summary(nmodel)
f=function(x,theta){
return(theta[1] + theta[2]*exp(-x/theta[3]))
}
parameters <- coef(nmodel)
x = seq(0.25, 4, 0.1)
lines(x,f(x,parameters),col="red")
library(tidyverse)
dat <- read_csv("AFM_Ex_1_2.csv")
FilterDat <- dat %>%
select(-Koers) %>%
filter(Tijd != "--" & Koers2 != "--" & Uitoef_prijs >= 460 & Datum != "--" & Tijd == "22-09-17"& Datum %in% c("20-10-17","15-12-17","16-03-18"))
class(FilterDat$Koers2) <- "numeric"
FilterDat %>%
ggplot() +
geom_point(mapping = aes(x = Uitoef_prijs, Koers2, shape = Datum), size = 2.5) +
geom_segment(aes(x = 528.03, y = 0, xend = 600, yend = 0), color = "red") +
geom_segment(aes(x = 528.03, y = 0, xend = 460, yend = 68.03), color = "red") +
ggtitle("Call option plot with different expiry dates, \n payoff in red, date: 22-9-2017") +
theme(plot.title = element_text(hjust = 0.5)) +
xlab("Exercise price") +
ylab("Option price")
install.packages(twitterR)
install.packages("twitterR")
?twitterR
install.packages("twitteR")
library(twitteR)
?setup_twitter_oauth
setup_twitter_oauth(consumer_key, consumer_secret, access_token, access_secret)
consumer_key <- "vGs8wQ9El3KkyHPgiiVpblH1f"
consumer_secret <- "EVRnSHCb5rHEtnYztKUhp3T0pIeDUyKME53fRltgn2gPfqltTg"
access_token <- "208549213-VXd3YZ8ywGyhu4nKUBFO4anmk7JTVFFgWtQI5NaU"
access_secret <- "EUou8TxaiIrVmyPsO43YRWv9ILuGawr9w8S9s0sXkqZOV"
setup_twitter_oauth(consumer_key, consumer_secret, access_token, access_secret)
?searchTwitter()
searchTwitter("flu")
searchTwitter("bitcoin")
searchTwitter(searchString = "cold" + "flu")
searchTwitter(searchString = "cold + flu")
searchTwitter(searchString = "cold + flu")
searchTwitter(searchString = 'cold+flu')
searchTwitter(searchString = 'cold+flu', lang = eng)
searchTwitter(searchString = 'cold+flu', lang = "eng")
searchTwitter(searchString = 'cold+flu', lang = "en")
searchTwitter(searchString = 'cold+flu+symptoms+irritating', lang = "en")
searchTwitter(searchString = 'cold+flu+symptoms', lang = "en")
searchTwitter(searchString = 'he+she+cold+flu+symptoms', lang = "en")
searchTwitter(searchString = 'I+cold+flu+symptoms', lang = "en")
searchTwitter(searchString = 'I+cold+flu+symptoms+good', lang = "en")
searchTwitter(searchString = 'I+cold+flu+symptoms+influenza', lang = "en")
?userTimeline
searchTwitter(searchString = 'I+cold+flu+symptoms+influenza', lang = "en", n=5000)
tweets <- searchTwitter(searchString = 'I+cold+flu', lang = "en", n=5000)
tweets.df <- twListToDF(tweets)
tweets.df[1,]
library(tm)
install.packages('tm')
library(tm)
?Corpus
?VectorSource
docs <- c("This is a text.", "This another one.")
(vs <- VectorSource(docs))
inspect(VCorpus(vs))
tweetCorpus <- Corpus(VectorSource(tweets.df$text))
tweetCorpus
inspect(tweetCorpus,n=1)
inspect(tweetCorpus[1])
inspect(tweetCorpus[1:10])
inspect(tweetCorpus[1:20])
tweetCorpus <- tm_map(tweetCorpus, content_transformer(tolower))
inspect(tweetCorpus[1:20])
?gsub
tweetCorpus <- tm_map(tweetCorpus, content_transformer(removeURL))
removeURL <- function(x){
gsub("http[^[:space:]]*", "", x)
}
tweetCorpus <- tm_map(tweetCorpus, content_transformer(removeURL))
inspect(tweetCorpus[1:10])
inspect(tweetCorpus[1:20])
inspect
inspect(tweetCorpus[100:120])
inspect(tweetCorpus[500:520])
inspect(tweetCorpus[1000:1030])
getwd()
library(tidyverse)
read_table?
?
)
?read_table
chemo <- read_table("chemo.txt")
chemo
chemo <- read_table2("chemo.txt")
chemo
chemo_sum <- chemo %>%
mutate(Seizures = SeizuresP1 + SeizuresP2 + SeizuresP3 + SeizuresP4)
chemo_sum
chemo_sum <- chemo %>%
mutate(Seizures = SeizuresP1 + SeizuresP2 + SeizuresP3 + SeizuresP4) %>%
select(Seizures, Treatment:Age)
chemo_sum
model1=glm(Seizures~Treatment+Baseline+Age,data=chemo_sum,family=poisson(link="log"))
summary(model1)
predict(model1)
chemo_sum
fitted(model1)
plot(chemo_sum$Seizures, fitted(model1))
plot(fitted(model1),chemo_sum$Seizures)
?lines
?line
?lines
?abline
abline(0,1,color = R)
abline(0,1,col = R)
abline(0,1,col = r)
abline(0,1,col = "red")
plot(chemo_sum$Seizures, fitted(model1))
abline(0,1,col = "red")
plot(fitted(model1),chemo_sum$Seizures)
abline(0,1,col = "red")
par(pty="s")
par(mfcol=c(1,1))
plot(chemo_sum$Seizures, fitted(model1))
abline(0,1,col = "red")
plot(chemo_sum$Seizures, fitted(model1), xlim = c(0,160), ylim = c(0,160))
abline(0,1,col = "red")
plot(chemo_sum$Seizures, fitted(model1), xlim = c(0,170), ylim = c(0,170))
plot(chemo_sum$Seizures, fitted(model1), xlim = c(0,180), ylim = c(0,180))
abline(0,1,col = "red")
anova(model1,test="Chisq")
residuals(deviance)
residuals(model1)
deviance(model1)
sum(residuals(model1)^2)
plot(residuals(model1), fitted(model1))
?residuals
par(mfcol=c(1,2))
plot(residuals(model1), fitted(model1))
plot(residuals(model1,type="pearson"), fitted(model1))
plot(fitted(model1), residuals(model1),)
plot(fitted(model1), residuals(model1,type="pearson"))
plot(fitted(model1), residuals(model1, type = "deviance"),)
plot(fitted(model1), residuals(model1,type="pearson"))
sum(residuals(model1,type="pearson")^2)
deviance(model1)
plot(2*sqrt(fitted(model1)), residuals(model1, type = "deviance"),)
plot(fitted(model1), residuals(model1, type = "deviance"),)
plot(fitted(model1), residuals(model1, type = "deviance"),)
plot(fitted(model1), residuals(model1,type="pearson"))
?glm
model1=glm(Seizures~Treatment+Baseline+Age,data=chemo_sum,family=poisson(link="sqrt"))
model2=glm(Seizures~Treatment+Baseline+Age,data=chemo_sum,family=poisson(link="sqrt"))
model1=glm(Seizures~Treatment+Baseline+Age,data=chemo_sum,family=poisson(link="log"))
fitted(model1)
par(pty="s")
par(mfcol=c(1,1))
plot(chemo_sum$Seizures, fitted(model1), xlim = c(0,180), ylim = c(0,180))
abline(0,1,col = "red")
summary(model2)
summary(model1)
AIC(model2)
BIC(model2)
AIC(model1,model2)
BIC(model1,model2)
clotting<-data.frame(conc=c(5,10,15,20,30,40,60,80,100,5,10,15,20,30,40,
60,80,100),lot=factor(c(rep(1,9),rep(2,9))),time=c(118,58,42,35,27,25,21,
19,18,69,35,26,21,18,16,13,12,12))
clotting
log(1)
model3=glm(time~log(conc)+lot,data=chemo_sum,family=gamma())
model3=glm(time~log(conc)+lot,data=clotting,family=gamma())
model3=glm(time~log(conc)+lot,data=clotting,family=gamma)
?gamma()
model3=glm(time~log(conc)+lot,data=clotting,family=Gamma())
summary(model3)
clotting$lot=factor(clotting$lot)
model3=glm(time~log(conc)+lot,data=clotting,family=Gamma())
summary(model3)
?plot
plot(time, log(conc),col=lot,data=clotting)
clotting
plot
?plot
plot(clotting$time, log(clotting$conc),col=clotting$lot)
?legend
legend(100,4.5)
plot(log(clotting$conc),clotting$time,col=clotting$lot)
legend(100,4.5, legend = c("lot one","lot two"))
legend(4.5,100, legend = c("lot one","lot two"))
legend(4.0,100, legend = c("lot one","lot two"))
log(100)
legend(4.0,100, legend = c("lot one","lot two"), col=c("black", "red"))
plot(log(clotting$conc),clotting$time,col=clotting$lot)
legend(4.0,100, legend = c("lot one","lot two"), col=c("black", "red"))
legend(4.0,100, legend = c("lot one","lot two"), col=c("black", "red"), lty=1:2)
?lty
legend?
)
?legend
legend(4.0,120, legend = c("lot one","lot two"), col=c("black", "red"), lty=1:2)
legend(4.3,120, legend = c("lot one","lot two"), col=c("black", "red"), lty=1:2)
legend(4.2,120, legend = c("lot one","lot two"), col=c("black", "red"), lty=1:2)
plot(log(clotting$conc),clotting$time,col=clotting$lot)
legend(4.2,120, legend = c("lot one","lot two"), col=c("black", "red"), lty=1:2)
plot(log(clotting$conc),clotting$time,col=clotting$lot, type = "b")
plot(log(clotting$conc),clotting$time,col=clotting$lot)
legend(4.2,120, legend = c("lot one","lot two"), col=c("black", "red"), lty=1)
legend(4.2,120, legend = c("lot one","lot two"), col=c("black", "red"), lty=0)
legend(4.2,120, legend = c("lot one","lot two"), col=c("black", "red"), lty=2)
legend(4.2,120, legend = c("lot one","lot two"), col=c("black", "red"), lty=3)
legend(4.2,120, legend = c("lot one","lot two"), col=c("black", "red"), lty=4)
legend(4.2,120, legend = c("lot one","lot two"), col=c("black", "red"), lty=5)
legend(4.2,120, legend = c("lot one","lot two"), col=c("black", "red"), lty=6)
legend(4.2,120, legend = c("lot one","lot two"), col=c("black", "red"), lty=7)
legend(4.2,120, legend = c("lot one","lot two"), col=c("black", "red"), pch=1)
plot(log(clotting$conc),clotting$time,col=clotting$lot)
legend(4.2,120, legend = c("lot one","lot two"), col=c("black", "red"), pch=1)
plot(log(clotting$conc),clotting$time,col=clotting$lot, pch=c(16,17))
plot(log(clotting$conc),clotting$time,col=clotting$lot, pch=c(16,17)[clotting$lot])
legend(4.2,120, legend = c("lot one","lot two"), col=c("black", "red"), pch=1)
legend(4.2,120, legend = c("lot one","lot two"), col=c("black", "red"), pch=c(16,17))
plot(log(clotting$conc),clotting$time,col=clotting$lot, pch=c(16,17)[clotting$lot], col = c("red","green"))
plot(log(clotting$conc),clotting$time,col=clotting$lot, pch=c(16,17)[clotting$lot])
legend(4.2,120, legend = c("lot one","lot two"), col=c("black", "red"), pch=c(16,17))
clotting
fitted(model3)
fitted(model3)
View(fitted(model3))
coef(model3)
coef(model3)[2]
model3$df.resid
length(clotting$conc)
FisherInv=vcov(model3)
FisherInv=vcov(model3)
coef(model3)[2]+c(-1,1)*qt(0.95,model3$df.resid)*sqrt(FisherInv[2,2])
coef(model3)[3]+c(-1,1)*qt(0.95,model3$df.resid)*sqrt(FisherInv[3,3])
plot(clotting$time, fitted(model3))
plot(fitted(model3), clotting$time)
abline(0,1,col = "red")
summary(model3)
anova(model3,test="F")
par(mfcol=c(1,2))
plot(fitted(model3), residuals(model3, type = "deviance"),)
plot(fitted(model3), residuals(model3,type="pearson"))
par(mfcol=c(1,1))
plot(residuals(model3, type = "deviance"), residuals(model3,type="pearson"))
abline(0,1,col = "red")
plot(residuals(model3, type = "deviance"), residuals(model3,type="pearson"))
abline(0,1,col = "red")
sum(residuals(model3,type="pearson")^2)
deviance(model3)
library(tidyverse)
birth <- read_table2("birthweight.txt")
birth
birth$Race = factor(birth$Race)
birth$Smoker = factor(birth$Smoker)
birth$Hypertension = factor(birth$Hypertension)
birth$UterineIrrit = factor(birth$UterineIrrit)
birth %>%
filter(BirthWeight < 2500)
birth %>%
mutate(low = cut(BirthWeight, break(2500), labels=c(1,0)))
birth %>%
mutate(low = cut(BirthWeight, break=c(2500), labels=c(1,0)))
birth %>%
mutate(low = cut(BirthWeight, break=c(2500), labels=c(1,0)))
birth %>%
mutate(low = cut(BirthWeight, breaks=c(2500), labels=c(1,0)))
birth %>%
mutate(low = cut(BirthWeight, breaks=c(2500), labels=c("1","0")))
birth %>%
mutate(low = cut(BirthWeight, breaks=c(2500)))
birth %>%
mutate(low = cut(BirthWeight, breaks=c(2500), labels=c(-Inf,2500,Inf)))
birth %>%
mutate(low = cut(BirthWeight, breaks=c(-Inf,2500,Inf), labels=c(1,0)))
birth2 <- birth %>%
mutate(low = cut(BirthWeight, breaks=c(-Inf,2500,Inf), labels=c(1,0)))
View(birth2)
?read_table
?read_table2
birth2 <- birth %>%
mutate(low = cut(BirthWeight, breaks=c(-Inf,2500,Inf), labels=c(1,0))) %>%
filter(!is.na(x))
View(birth)
birth %>%
mutate(low = cut(BirthWeight, breaks=c(-Inf,2500,Inf), labels=c(1,0))) %>%
filter(!is.na(x))
birth2 <- birth %>%
mutate(low = cut(BirthWeight, breaks=c(-Inf,2500,Inf), labels=c(1,0))) %>%
na.omit()
View(birth2)
birth2$low = factor(birth2$low)
model4=glm(low~MotherAge+MotherWeight+Race+Smoker+PremLabor+Hypertension+UterineIrrit+PhysicianVisits,data=birth2
,family=binomial(link="logit"))
anova(model4,,test="Chisq")
anova(model4,test="Chisq")
model5=glm(low~MotherAge+MotherWeight+Smoker+PremLabor+Hypertension,data=birth2
,family=binomial(link="logit"))
summary(model5)
summary(model4)
anova(model5,test="Chisq")
AIC(model4,model5)
birth2
fitted(model5)
?fitted
?predict
predict(model5)
predict(model5,data=birth2,type="response")
View(birth2)
attach(birthweight)
birthweight <- read_table2("birthweight.txt")
attach(birthweight)
birthweight$Race = factor(birthweight$Race)
birthweight$Smoker <- factor(birthweight$Smoker)
birthweight$Hypertension <- factor(birthweight$Hypertension)
birthweight$UterineIrrit <- factor(birthweight$UterineIrrit)
birthweight$low <- ifelse(birthweight$BirthWeight >=2500, "0", "1")
birthweight$low <- factor(birthweight$low)
attach(birthweight)
View(birthweight)
fit1 <- glm(low ~ MotherAge+MotherWeight+Smoker+PremLabor+Hypertension, family = binomial,data=birthweight)
AIC(fit1)
newdata <- data.frame(MotherAge,MotherWeight,Smoker,PremLabor,Hypertension)
predict(fit1, data=newdata, type="response")
View(newdata)
fitted(fit1)
summary(fit1)
summary(model5)
?binomial
model5=glm(low~MotherAge+MotherWeight+Smoker+PremLabor+Hypertension,data=birth2
,family=binomial)
summary(model5)
birthweight
birth2
fit1 <- glm(low ~ MotherAge+MotherWeight+Smoker+PremLabor+Hypertension, family = binomial,data=birth2)
summary(fit1)
fit1 <- glm(low ~ MotherAge+MotherWeight+Smoker+PremLabor+Hypertension, family = binomial,data=birthweight)
summary(fit1)
?attach
attach(birth2)
model5=glm(low~MotherAge+MotherWeight+Smoker+PremLabor+Hypertension,data=birth2
,family=binomial(link="logit"))
summary(model5)
summary(fit1)
birthweight
birth2
View(birth2)
library(tidyverse)
birth <- read_table2("birthweight.txt")
birth$Race = factor(birth$Race)
birth$Smoker = factor(birth$Smoker)
birth$Hypertension = factor(birth$Hypertension)
birth$UterineIrrit = factor(birth$UterineIrrit)
birth2 <- birth %>%
mutate(low = cut(BirthWeight, breaks=c(-Inf,2500,Inf), labels=c(1,0))) %>%
na.omit()
model5=glm(low~MotherAge+MotherWeight+Smoker+PremLabor+Hypertension,data=birth2
,family=binomial(link="logit"))
summary(model5)
birth2 <- birth %>%
mutate(low = cut(BirthWeight, breaks=c(-Inf,2500,Inf), labels=c("1","0"))) %>%
na.omit()
model5=glm(low~MotherAge+MotherWeight+Smoker+PremLabor+Hypertension,data=birth2
,family=binomial(link="logit"))
summary(model5)
summary(fit)
summary(fit1)
birthweight <- birthweight %>%
na.omit()
attach(birthweight)
fit1 <- glm(low ~ MotherAge+MotherWeight+Smoker+PremLabor+Hypertension, family = binomial,data=birthweight)
summary(fit1)
all.equal(fit1,birth2)
all.equal(birthweight,birth2)
birth2$low
table(birth2$low)
birthweight$low
table(birthweight$low)
birth2$low = factor(birth2$low, levels=c(0,1), labels = c("No","Yes"))
birth2$low
birth2$low = factor(birth2$low, levels=c(0,1))
birth2$low
birth2$low = factor(birth2$low, levels=c(0,1), labels = ("0","1"))
birth2$low = factor(birth2$low, levels=c(0,1), labels = c("0","1"))
birth2$low
birth2 <- birth %>%
mutate(low = cut(BirthWeight, breaks=c(-Inf,2500,Inf), labels=c(1,0))) %>%
na.omit()
birth2$low = factor(birth2$low, levels=c(0,1), labels = c("0","1"))
birth2$low
model5=glm(low~MotherAge+MotherWeight+Smoker+PremLabor+Hypertension,data=birth2
,family=binomial(link="logit"))
summary(model5)
birth2 <- birth %>%
mutate(low = cut(BirthWeight, breaks=c(-Inf,2500,Inf), labels=c(1,0))) %>%
na.omit()
model5=glm(low~MotherAge+MotherWeight+Smoker+PremLabor+Hypertension,data=birth2
,family=binomial(link="logit"))
summary(model5)
birth2$low = factor(birth2$low)
birth2 <- birth %>%
mutate(low = cut(BirthWeight, breaks=c(-Inf,2500,Inf), labels=c(1,0))) %>%
na.omit()
birth2$low = factor(birth2$low)
birth2$low = relevel(birth2$low, ref = "1")
birth2$low
?relevel
model4=glm(low~MotherAge+MotherWeight+Race+Smoker+PremLabor+Hypertension+UterineIrrit+PhysicianVisits,data=birth2
,family=binomial(link="logit"))
summary(model4)
model5=glm(low~MotherAge+MotherWeight+Smoker+PremLabor+Hypertension,data=birth2
,family=binomial(link="logit"))
summary(model5)
summary(fit1)
birthweight$low
birth2$low = relevel(birth2$low, ref = "0")
model5=glm(low~MotherAge+MotherWeight+Smoker+PremLabor+Hypertension,data=birth2
,family=binomial(link="logit"))
summary(model5)
model5
model4=glm(low~MotherAge+MotherWeight+Race+Smoker+PremLabor+Hypertension+UterineIrrit+PhysicianVisits,data=birth2
,family=binomial(link="logit"))
anova(model4,test="Chisq")
model5=glm(low~MotherAge+MotherWeight+Smoker+PremLabor+Hypertension,data=birth2
,family=binomial(link="logit"))
AIC(model4,model5)
fitted(model5)
sum(residuals(model5,type="pearson")^2)
deviance(model5)
?qt
?chisq.test
?qchisq
qchisq(0.95,model5$df.resid)
deviance(model5)
tweets
tweets[1]
tweets[[1]]
getwd()
qqexp
qqexp()
install.packages("keras")
library(purrr)
library(r6)
install.packages("r6")
install.packages("R6")
install.packages("R6")
install.packages("R6")
install.packages("R6")
install.packages("R6")
update.packages"R6()
)
)
)
""
update.packages("R6")
library(keras)
library(purrr)
library(R6)
K <- backend()
library(keras)
library(purrr)
library(R6)
K <- backend()
?backend
K <- backend()
install_tensorflow(gpu=TRUE)
library(keras)
install_tensorflow(gpu=TRUE)
install_tensorflow()
install.packages("devtools")
devtools::install_github("rstudio/keras")
library(keras)
install_tensorflow(gpu=TRUE)
library(tensorflow)
install_tensorflow(gpu=TRUE)
install_tensorflow(version = "gpu")
getwd()
base_image_path <- "neural-style-base-img.jpg"
style_reference_image_path <- "neural-style-style.jpg"
iterations <- 10
total_variation_weight <- 1
style_weight <- 1
content_weight <- 0.025
img <- image_load(base_image_path)
K <- backend()
?image_load
d <- dataset_mnist()
library(devtools)
devtools::install_github("rstudio/keras")
install.packages("devtools")
library(dvtools)
library(devtools)
devtools::install_github("rstudio/keras")
library(keras)
library(tensorflow)
install_tensorflow(gpu=TRUE)
install_tensorflow(version = "gpu")
data<-dataset_mnist()
install.packages("tensorflow")
install.packages("tensorflow")
library(keras)
xs <- replicate(5, runif(10), simplify = FALSE)
ws <- replicate(5, rpois(10, 5) + 1, simplify = FALSE)
xs
unlist(lapply(xs, mean))
ws
setwd("C:/Users/Mark/Desktop/data_mining_project/mood_smartphone")
